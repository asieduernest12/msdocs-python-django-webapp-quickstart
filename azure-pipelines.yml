trigger:
  - main
  - dev

pool:
  vmImage: ubuntu-latest

variables:
  tag: $(Build.BuildID)
  acrType: 'Azure Container Registry'
  azSubscription: 'Azure subscription 1(c72bfa58-4c29-4b94-9788-b65037744171)'
  acr: '{"loginServer":"dcrops.azurecr.io", "id" : "/subscriptions/c72bfa58-4c29-4b94-9788-b65037744171/resourceGroups/msdocs-python-webapp-quickstart/providers/Microsoft.ContainerRegistry/registries/dcrops"}'
  acrRepo: 'djangocontainerdemo_backend'
  acrRegistry:  'dcrops.azurecr.io'

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildJob
        displayName: Build Job
        steps:
          - task: DockerCompose@1
            displayName: Build Image for Staging
            inputs:
              containerregistrytype: $(acrType)
              azureSubscription: $(azSubscription)
              azureContainerRegistry: $(acr)
              dockerComposeFile: '**/compose.yml'
              action: 'Build services'
              includeSourceTags: true
              includeLatestTag: true
              projectName: $(projectName)
              projectFile: staging
          
          - task: DockerCompose@1
            displayName: Push Image for Staging
            inputs:
              containerregistrytype: $(acrType)
              azureSubscription: $(azSubscription)
              azureContainerRegistry: $(acr)
              dockerComposeFile: '**/compose.yml'
              action: 'Push services'
              includeSourceTags: true
              includeLatestTag: true
              container: "djangocontainerdemo_backend"
              projectName: $(projectName)
              projectFile: staging

              
  - stage: Test
    displayName: Test Stage
    dependsOn: Build
    jobs:
      - job: TestJob
        displayName: Test Job
        steps:
          - script: |
              echo "hello"

          # - task: DockerCompose@1
          #   displayName: Build Image for Staging
          #   inputs:
          #     containerregistrytype: 'Azure Container Registry'
          #     azureSubscription: 'Azure subscription 1(c72bfa58-4c29-4b94-9788-b65037744171)'
          #     azureContainerRegistry: '{"loginServer":"dcrops.azurecr.io", "id" : "/subscriptions/c72bfa58-4c29-4b94-9788-b65037744171/resourceGroups/msdocs-python-webapp-quickstart/providers/Microsoft.ContainerRegistry/registries/dcrops"}'
          #     dockerComposeFile: '**/compose.yml'
          #     action: 'Run compose command'
          #     dockerComposeCommand: "run backend bash -c \". init.sh  &1>>/dev/null & sleep 3 && curl --fail http://localhost:8000\""
          #     includeSourceTags: true
          #     includeLatestTag: true
          #     projectName: $(projectName)
          #     projectFile: staging

  - stage: Deploy
    displayName: Deploy Stage
    dependsOn: Test
    jobs:
      - job: DeployJob
        displayName: Deploy Job
        steps:
          
          - task: AzureWebAppContainer@1
            displayName: Deploy to Azure Web App
            inputs:
              azureSubscription: $(azSubscription)
              appName: 'django-demo-docker-compose'
              deployToSlotOrASE: true
              resourceGroupName: 'msdocs-python-webapp-quickstart'
              slotName: 'production'
              # containers: dcrops.azurecr.io/djangocontainerdemo_backend:latest
              containers: $(acrRegistry)/$(acrRepo):$(tag)
          
          - task: KubernetesManifest@0
            displayName: Deploy
            inputs:
              kubernetesServiceConnection: someK8sSC1
              namespace: default
              manifests: |
                **/manifests/deployment.yml
                **/manifests/service.yml
              containers: |
                $(acrRegistry)/$(acrRepo):$(tag)
              # imagePullSecrets: |
              #   some-secret
              #   some-other-secret