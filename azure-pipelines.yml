trigger:
  - main
  - dev

pool:
  vmImage: ubuntu-latest

variables:
  tag: $(Build.BuildID)
  acrType: 'Azure Container Registry'
  azSubscription: deleted
  acr: deleted
  acrRepo: deleted
  acrRegistry: deleted
  k8serviceConnection: deleted
  projectName: deleted
  k8namespace: deleted
  azResourceGroup: deleted

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildJob
        displayName: Build Job
        steps:
          - task: DockerCompose@1
            displayName: Build Image for Staging
            inputs:
              containerregistrytype: $(acrType)
              azureSubscription: $(azSubscription)
              azureContainerRegistry: $(acr)
              dockerComposeFile: '**/compose.yml'
              action: 'Build services'
              includeSourceTags: true
              includeLatestTag: true
              projectName: '$(projectName)'
              projectFile: staging
          
          - task: DockerCompose@1
            displayName: Push Image for Staging
            inputs:
              containerregistrytype: $(acrType)
              azureSubscription: $(azSubscription)
              azureContainerRegistry: $(acr)
              dockerComposeFile: '**/compose.yml'
              action: 'Push services'
              includeSourceTags: true
              includeLatestTag: true
              container: "djangocontainerdemo_backend"
              projectName: '$(projectName)'
              projectFile: staging

              
  - stage: Test
    displayName: Test Stage
    dependsOn: Build
    jobs:
      - job: TestJob
        displayName: Test Job
        steps:
          - script: |
              echo "hello"

  - stage: Deploy
    displayName: Deploy Stage
    dependsOn: Test
    jobs:
      - job: DeployJob
        displayName: Deploy Job
        steps:
          
          # - task: AzureWebAppContainer@1
          #   displayName: Deploy to Azure Web App
          #   inputs:
          #     azureSubscription: $(azSubscription)
          #     appName: 'django-demo-docker-compose'
          #     deployToSlotOrASE: true
          #     resourceGroupName: 'msdocs-python-webapp-quickstart'
          #     slotName: 'production'
          #     # containers: dcrops.azurecr.io/djangocontainerdemo_backend:latest
          #     containers: $(acrRegistry)/$(acrRepo):$(tag)
          # - task: Kubernetes@1
          

          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              azureSubscriptionConnection: '$(azSubscription)'
              kubernetesServiceConnection: '$(k8serviceConnection)'
              azureResourceGroup: '$(azResourceGroup)'
              namespace: '$(k8namespace)'
              manifests: |
                **/manifests/deployment.yml
                **/manifests/service.yml
              containers: '$(acrRegistry)/$(acrRepo):$(tag)'
              # imagePullSecrets: |
              #   some-secret
              #   some-other-secret
              # arguments: '--validate=false'